{"version":3,"sources":["webpack:///./src/data/res_pm/pages/blog.js","webpack:///./src/data/res_pm/pages/docs.js","webpack:///./src/data/res_pm/pages/portfolio.js","webpack:///./src/data/res_pm/pages/search.js","webpack:///./src/data/res_pm/pages/shop-cart.js","webpack:///./src/data/res_pm/pages/shop.js","webpack:///./src/templates/static-page.js"],"names":["DocsPage","SearchPage","urlParams","window","location","search","URLSearchParams","useSearchIndex","index","store","useState","get","query","setQuery","results","useFlexSearch","className","id","type","name","placeholder","value","onChange","event","navigate","target","state","map","result","key","href","slug","title","StaticPage","data","file","relativePath","replace"],"mappings":"iOAIe,SAASA,IACtB,OACE,oCACE,kBAAC,IAAD,KACE,oCACA,kBAAC,IAAD,QCNO,SAASA,IACtB,OACE,oCACE,kBAAC,IAAD,KACE,sCCJO,SAASA,IACtB,OACE,oCACE,kBAAC,IAAD,KACE,2C,wCCDO,SAASC,IACtB,IAAIC,EAGCA,EADa,oBAAXC,QAA0BA,OAAOC,SAASC,OAChC,IAAIC,gBAAgBH,OAAOC,SAASC,QACpC,GAEjB,IAPmC,EAQVE,cAAjBC,EAR2B,EAQ3BA,MAAOC,EARoB,EAQpBA,MARoB,EASTC,mBAAuB,KAAdR,EAAmB,GAAKA,EAAUS,IAAI,MAAlEC,EAT4B,KASrBC,EATqB,KAW7BC,EAAUC,YAAcH,EAAOJ,EAAOC,GAE5C,OACE,oCACE,kBAAC,IAAD,KACE,2CACA,2BACEO,UAAU,eACVC,GAAG,SACHC,KAAK,SACLC,KAAK,QACLC,YAAY,mBACZC,MAAOT,EACPU,SAAU,SAAAC,GACRC,mBAlBgB,MAkBmBD,EAAME,OAAOJ,MAAS,CACvDK,MAAO,CAAEd,WAEXC,EAASU,EAAME,OAAOJ,UAG1B,uCACA,4BACGP,EAAQa,KAAI,SAAAC,GAAM,OACjB,wBAAIC,IAAKD,EAAOX,IACd,uBAAGa,KAAMF,EAAOG,MAAOH,EAAOI,cCtC7B,SAAShC,IACtB,OACE,oCACE,kBAAC,IAAD,KACE,2CCJO,SAASA,IACtB,OACE,oCACE,kBAAC,IAAD,KACE,sCCEO,SAASiC,EAAT,GAIb,OAJ2C,EAARC,KACbC,KAAKC,aACxBC,QAAQ,QAAS,IACjBA,QAAQ,MAAO,KAEhB,IAAK,QACH,OACE,oCACE,kBAAC,EAAD,OAIN,IAAK,QACH,OACE,oCACE,kBAAC,EAAD,OAIN,IAAK,aACH,OACE,oCACE,kBAAC,EAAD,OAIN,IAAK,UACH,OACE,oCACE,kBAACpC,EAAD,OAIN,IAAK,aACH,OACE,oCACE,kBAAC,EAAD,OAIN,IAAK,QACH,OACE,oCACE,kBAAC,EAAD,QASH,IAAMW,EAAK","file":"component---src-templates-static-page-js-69e8256107d587ef2e1f.js","sourcesContent":["import React from \"react\"\r\nimport Layout from \"Components/layouts/page\"\r\nimport SearchBar from \"Components/modules/searchBar\"\r\n\r\nexport default function DocsPage() {\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <h1>Blog</h1>\r\n        <SearchBar />\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport Layout from \"Components/layouts/page\"\r\n\r\nexport default function DocsPage() {\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <h1>Docs</h1>\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport Layout from \"Components/layouts/page\"\r\n\r\nexport default function DocsPage() {\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <h1>Portfolio</h1>\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { navigate } from \"gatsby\"\r\nimport { useFlexSearch } from \"react-use-flexsearch\"\r\nimport { useSearchIndex } from \"StaticQueries/search-index\"\r\nimport Layout from \"Components/layouts/page\"\r\n\r\nexport default function SearchPage() {\r\n  let urlParams\r\n\r\n  typeof window !== \"undefined\" && window.location.search\r\n    ? (urlParams = new URLSearchParams(window.location.search))\r\n    : (urlParams = \"\")\r\n\r\n  const searchHintsUrlPrefix = `?q=`\r\n  const { index, store } = useSearchIndex()\r\n  const [query, setQuery] = useState(urlParams === \"\" ? \"\" : urlParams.get(\"q\"))\r\n\r\n  const results = useFlexSearch(query, index, store)\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <h1>Search page</h1>\r\n        <input\r\n          className=\"form-control\"\r\n          id=\"search\"\r\n          type=\"search\"\r\n          name=\"query\"\r\n          placeholder=\"Search all posts\"\r\n          value={query}\r\n          onChange={event => {\r\n            navigate(`${searchHintsUrlPrefix}${event.target.value}`, {\r\n              state: { query },\r\n            })\r\n            setQuery(event.target.value)\r\n          }}\r\n        ></input>\r\n        <h1>Results</h1>\r\n        <ul>\r\n          {results.map(result => (\r\n            <li key={result.id}>\r\n              <a href={result.slug}>{result.title}</a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport Layout from \"Components/layouts/page\"\r\n\r\nexport default function DocsPage() {\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <h1>Shop cart</h1>\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport Layout from \"Components/layouts/page\"\r\n\r\nexport default function DocsPage() {\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <h1>Shop</h1>\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport BlogPage from \"Project/pages/blog\"\r\nimport DocsPage from \"Project/pages/docs\"\r\nimport PortfolioPage from \"Project/pages/portfolio\"\r\nimport SearchPage from \"Project/pages/search\"\r\nimport ShopCartPage from \"Project/pages/shop-cart\"\r\nimport ShopPage from \"Project/pages/shop\"\r\n\r\nexport default function StaticPage({ data }) {\r\n  const pagePath = data.file.relativePath\r\n    .replace(\"pages\", \"\")\r\n    .replace(\".js\", \"\")\r\n  switch (pagePath) {\r\n    case \"/blog\":\r\n      return (\r\n        <>\r\n          <BlogPage />\r\n        </>\r\n      )\r\n      break\r\n    case \"/docs\":\r\n      return (\r\n        <>\r\n          <DocsPage />\r\n        </>\r\n      )\r\n      break\r\n    case \"/portfolio\":\r\n      return (\r\n        <>\r\n          <PortfolioPage />\r\n        </>\r\n      )\r\n      break\r\n    case \"/search\":\r\n      return (\r\n        <>\r\n          <SearchPage />\r\n        </>\r\n      )\r\n      break\r\n    case \"/shop-cart\":\r\n      return (\r\n        <>\r\n          <ShopCartPage />\r\n        </>\r\n      )\r\n      break\r\n    case \"/shop\":\r\n      return (\r\n        <>\r\n          <ShopPage />\r\n        </>\r\n      )\r\n      break\r\n    default:\r\n      break\r\n  }\r\n}\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    file(relativePath: { eq: $slug }) {\r\n      relativePath\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}